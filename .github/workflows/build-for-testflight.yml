name: "build and submit to testflight"
on:
  push: 
    branches: 
      - actionsDev
  # workflow_run:
    # workflows:
      # - "ios-tests"
    # types:
      # - completed
    # branches:
      # - main
  workflow_dispatch:
permissions: 
  contents: write
jobs:
  build-and-upload:
    # if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: macos-latest
    environment: Production

    steps:
    # Check out code with push permissions (needed for commit)
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: true

    - name: Bump build number
      run: |
        cd apps/ios
        agvtool bump 

    # Commit and push the version change (avoid loop with [skip ci])
    - name: Commit bump
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name  "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add -A
        git commit -m "chore(ci): bump build number [skip ci]" || echo "Nothing to commit"
        git push

    # 4  Select the latest stable Xcode version 
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: "latest-stable"

    # install the developer certificate in the signing_temp keychain
    - name: install certificate
      id: install-certificates
      uses: apple-actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.APPSTORE_CERTIFICATES_FILE_BASE64 }}
        p12-password: ${{ secrets.APPSTORE_CERTIFICATES_PASSWORD }}

    - name: build and upload to testflight
      env:
        APPSTORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_P8_BASE64 }}
        APPSTORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_ISSUER_ID }}
        APPSTORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_KEY_ID }}
        KEYCHAIN_PASSWORD: ${{ steps.install-certificates.outputs.keychain-password }}
      # run: "apps/ios/Scripts/ci/archive-upload.sh | xcpretty && exit ${PIPESTATUS[0]}"
      run: "apps/ios/Scripts/ci/archive-upload.sh"
