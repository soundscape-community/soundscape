# This container setup provisions a PostGIS server, downloads and ingests OSM
# data for Washington, DC, and runs a Soundscape GeoJSON tile server.
#
# the following variables can be set in .env:
# GEN_REGIONS: set to any location listed in extracts.json, or add new ones
# from the available downloads at http://download.geofabrik.de/
# LOOP_TIME: The time between database updates in seconds.
#
# To run:
#   $ docker-compose up --build
#
# Once all three components are running (PostGIS server, ingest service, tile
# server), test by fetching a tile in your browser, e.g.:
#   http://localhost:8081/16/18745/25070.json
#
# Helpful tool for finding other tile coordinates (the last two numbers in the
# above URL): http://bboxfinder.com/

# There are two tilesrv services defined, tilesrv-blue and tilesrv-green to
# allow for updates without downtime. tilesrv-blue is started by default. 
#
# To update:
# docker compose up --build -d tilesrv-green
# Test tilesrv-green on localhost:8082
# switch Caddy config:
# sudo ln -s /etc/caddy/Caddyfile.green /etc/caddy/Caddyfile
# sudo systemctl reload caddy
# if everything works, bring down tilesrv-blue:
# docker compose stop tilesrv-blue
# docker compose rm tilesrv-blue
#
# For the next update swap blue and green in the instructions above.
version: '3.8'

volumes:
  postgis:
  tiles:

services:
  postgis:
    image: postgis/postgis
    user: postgres
    environment:
      - POSTGRES_PASSWORD=secret
      - PGUSER=postgres
    volumes:
      - postgis:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  ingest:
    image: soundscape/ingest
    build:
      dockerfile: Dockerfile.ingest
    environment:
      - GEN_REGIONS=${GEN_REGIONS:-district-of-columbia}
      - LOOP_TIME=${LOOP_TIME:-14400}
      - NAMESPACE=soundscape
      - POSTGIS_HOST=postgis
      - POSTGIS_PORT=5432
      - POSTGIS_USER=postgres
      - POSTGIS_PASSWORD=secret
      - POSTGIS_DBNAME=osm
    volumes:
      - tiles:/tiles
      - ./extra_data:/extra_data
    depends_on:
      postgis:
        condition: service_healthy

  tilesrv-blue:
    image: soundscape/tilesrv
    build:
      dockerfile: Dockerfile.tilesrv
    environment:
      - DSN=host=postgis port=5432 dbname=osm user=postgres password=secret
    ports:
      - "127.0.0.1:8081:8080"
    depends_on:
      postgis:
        condition: service_healthy

  tilesrv-green:
    image: soundscape/tilesrv
    build:
      dockerfile: Dockerfile.tilesrv
    environment:
      - DSN=host=postgis port=5432 dbname=osm user=postgres password=secret
    ports:
      - "127.0.0.1:8082:8080"
    depends_on:
      postgis:
        condition: service_healthy
    # prevent tilesrv-green from starting automatically
    profiles: ["tilesrv-green"]
